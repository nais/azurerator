package application

import (
	"fmt"

	msgraph "github.com/nais/msgraph.go/v1.0"

	"github.com/nais/azureator/pkg/azure"
	"github.com/nais/azureator/pkg/azure/util"
)

// Workaround to include empty array of RedirectUris in JSON serialization.
// The autogenerated library code uses 'omitempty' for RedirectUris, which when empty
// leaves the list of redirect URIs unchanged and non-empty and is thus considered unmodified in the PATCH operation.
type webApi struct {
	RedirectUris []string `json:"redirectUris"`
}

type redirectUri struct {
	azure.Application
}

func newRedirectUri(application azure.Application) azure.RedirectUri {
	return redirectUri{Application: application}
}

func (r redirectUri) Update(tx azure.Transaction) error {
	objectId := tx.Instance.GetObjectId()

	app := &struct {
		msgraph.DirectoryObject
		Web webApi `json:"web"`
	}{
		Web: webApi{
			RedirectUris: util.GetReplyUrlsStringSlice(tx.Instance),
		},
	}

	if err := r.Application.Patch(tx.Ctx, objectId, app); err != nil {
		return fmt.Errorf("failed to update redirect URIs: %w", err)
	}
	return nil
}
